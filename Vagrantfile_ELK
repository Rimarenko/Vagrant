# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  config.vm.box_check_update = false
  config.vm.hostname = "elk"
  config.vm.define "elk"
  config.vm.network "public_network", ip: "172.30.0.12", bridge: "enp6s0"
 config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = "4096"
    vb.cpus = 2
  end

config.vm.provision "shell", inline: <<-SHELL
  yum install mc net-tools wget -y
#  wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http:%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.rpm"
  rpm -ivh /vagrant/data/jdk-8u181-linux-x64.rpm
  rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch  
#  wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.0.rpm
  rpm -ivh /vagrant/data/elasticsearch-6.4.0.rpm
  cp -f /vagrant/data/elasticsearch.yml /etc/elasticsearch/
  cp -f /vagrant/data/elasticsearch.service /usr/lib/systemd/system/
  cp -f /vagrant/data/elasticsearch /etc/sysconfig/
  Systemctl daemon-reload
  systemctl enable elasticsearch
  systemctl start elasticsearch
#  wget https://artifacts.elastic.co/downloads/kibana/kibana-6.4.0-x86_64.rpm
  rpm -ivh /vagrant/data/kibana-6.4.0-x86_64.rpm
  cp -f /vagrant/data/kibana.yml /etc/kibana/
  systemctl enable kibana
  service kibana start
  yum install epel-release -y
  yum install nginx httpd-tools -y
  cp -f /vagrant/data/elk.ksd.ua.conf /etc/nginx/conf.d/
  systemctl enable nginx
  service nginx start
#  wget https://artifacts.elastic.co/downloads/logstash/logstash-6.4.0.rpm
  rpm -ivh /vagrant/data/logstash-6.4.0.rpm
  systemctl enable logstash
  service logstash restart
  route add -net 172.30.0.0 netmask 255.255.0.0 gw 172.30.0.1 eth1
  route add -net 172.30.0.0 netmask 255.255.0.0 gw 172.30.0.1 eth1
  
#------------------------------------------------------  
#if need selinux work
  yum install -y policycoreutils-python policycoreutils-newrole policycoreutils-restorecond setools-console 

  # show the new rules to be generated
  grep nginx /var/log/audit/audit.log | audit2allow
  
  # show the full rules to be applied
  grep nginx /var/log/audit/audit.log | audit2allow -m nginx
  
  # generate the rules to be applied
  grep nginx /var/log/audit/audit.log | audit2allow -M nginx
  
  # apply the rules
  semodule -i nginx.pp
#----------------------------------------------------   
SHELL
end
